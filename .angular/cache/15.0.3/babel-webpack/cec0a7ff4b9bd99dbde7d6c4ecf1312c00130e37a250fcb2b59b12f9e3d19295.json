{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class PhoneValidDirective {\n  constructor(element) {\n    this.element = element;\n  }\n  onChange() {\n    let flag = false;\n    for (let index = 0; index < this.element.nativeElement.value.length; index++) {\n      const char = this.element.nativeElement.value[index];\n      if (char < '0' || char > '9') {\n        this.element.nativeElement.style.border = '1px solid red';\n        flag = true;\n      }\n    }\n    if (!flag && this.element.nativeElement.value.length > 9) this.element.nativeElement.style.border = '1px solid white';else {\n      this.element.nativeElement.style.border = '1px solid red';\n    }\n  }\n  validate(control) {\n    throw new Error('Method not implemented.');\n  }\n  registerOnValidatorChange(fn) {\n    throw new Error('Method not implemented.');\n  }\n}\nPhoneValidDirective.ɵfac = function PhoneValidDirective_Factory(t) {\n  return new (t || PhoneValidDirective)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\nPhoneValidDirective.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n  type: PhoneValidDirective,\n  selectors: [[\"\", \"appPhoneValid\", \"\"]],\n  hostBindings: function PhoneValidDirective_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"change\", function PhoneValidDirective_change_HostBindingHandler() {\n        return ctx.onChange();\n      });\n    }\n  }\n});","map":{"version":3,"mappings":";AAMA,OAAM,MAAOA,mBAAmB;EAgB9BC,YAAmBC,OAAkB;IAAlB,YAAO,GAAPA,OAAO;EAE1B;EAhBFC,QAAQ;IACN,IAAIC,IAAI,GAAC,KAAK;IACf,KAAK,IAAIC,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAG,IAAI,CAACH,OAAO,CAACI,aAAa,CAACC,KAAK,CAACC,MAAM,EAAEH,KAAK,EAAE,EAAE;MAC7E,MAAMI,IAAI,GAAG,IAAI,CAACP,OAAO,CAACI,aAAa,CAACC,KAAK,CAACF,KAAK,CAAC;MACpD,IAAGI,IAAI,GAAC,GAAG,IAAGA,IAAI,GAAC,GAAG,EAAC;QACvB,IAAI,CAACP,OAAO,CAACI,aAAa,CAACI,KAAK,CAACC,MAAM,GAAC,eAAe;QACvDP,IAAI,GAAC,IAAI;;;IAEV,IAAG,CAACA,IAAI,IAAG,IAAI,CAACF,OAAO,CAACI,aAAa,CAACC,KAAK,CAACC,MAAM,GAAC,CAAE,EACrD,IAAI,CAACN,OAAO,CAACI,aAAa,CAACI,KAAK,CAACC,MAAM,GAAC,iBAAiB,CAAC,KACtD;MACH,IAAI,CAACT,OAAO,CAACI,aAAa,CAACI,KAAK,CAACC,MAAM,GAAC,eAAe;;EAEzD;EAIEC,QAAQ,CAACC,OAAkC;IACzC,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;EAC5C;EACAC,yBAAyB,CAAEC,EAAc;IACvC,MAAM,IAAIF,KAAK,CAAC,yBAAyB,CAAC;EAC5C;;AAxBWd,mBAAmB;mBAAnBA,mBAAmB;AAAA;AAAnBA,mBAAmB;QAAnBA,mBAAmB;EAAAiB;EAAAC;IAAA;;eAAnBC,cAAU;MAAA","names":["PhoneValidDirective","constructor","element","onChange","flag","index","nativeElement","value","length","char","style","border","validate","control","Error","registerOnValidatorChange","fn","selectors","hostBindings","ctx"],"sourceRoot":"","sources":["D:\\חומר יד\\angular\\פרוייקט\\project\\src\\app\\Directions\\phone-valid.directive.ts"],"sourcesContent":["import { Directive, ElementRef, HostListener } from '@angular/core';\nimport { AbstractControl, ValidationErrors, Validator } from '@angular/forms';\n\n@Directive({\n  selector: '[appPhoneValid]'\n})\nexport class PhoneValidDirective implements Validator{\n@HostListener('change')\nonChange(){\n  let flag=false;\n for (let index = 0; index < this.element.nativeElement.value.length; index++) {\n  const char = this.element.nativeElement.value[index];\n  if(char<'0' ||char>'9'){\n  this.element.nativeElement.style.border='1px solid red';\n  flag=true;}\n }\n if(!flag&&(this.element.nativeElement.value.length>9))\n this.element.nativeElement.style.border='1px solid white';\n else{\n  this.element.nativeElement.style.border='1px solid red';\n }\n}\n  constructor(public element:ElementRef) { \n     \n  }\n  validate(control: AbstractControl<any, any>): ValidationErrors | null {\n    throw new Error('Method not implemented.');\n  }\n  registerOnValidatorChange?(fn: () => void): void {\n    throw new Error('Method not implemented.');\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}